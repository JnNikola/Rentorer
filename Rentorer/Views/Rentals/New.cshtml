@model dynamic
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Rental Form</h2>


<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movies</label>
        <div class="tt-container">
            <input id="movie" data-rule-atLeastOneMovie="true" name="movie" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>


    <button class="btn btn-primary">Submit</button> <button id="reset" class="btn btn-danger" type="reset">Reset Form</button>
</form>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");

    <script>

        //Twitter typeahead script

        $(document).ready(function () {

            var viewModel = {
                movieIds: []
            };
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            $('#customer').typeahead({
                highlight: true
            }, {
                limit: 20,
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                viewModel.customerId = customer.id;
            });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            $('#movie').typeahead({
                highlight: true
            }, {
                limit:20,
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                $("#movie").typeahead("val", "");
                viewModel.movieIds.push(movie.id);
            });

            $.validator.addMethod("validCustomer",
                function() {
                    return viewModel.customerId && viewModel.customerId !== 0;
                }, "Please select a valid customer!");

            $.validator.addMethod("atLeastOneMovie",
                function () {
                    console.log(viewModel.movieIds.length > 0 + "   " + viewModel.movieIds);
                    return viewModel.movieIds.length > 0;
                },
                "At least one movie is required");

            var validator = $("#newRental").validate({
                submitHandler: function () {

                    $.ajax({
                            url: "/api/newRentals",
                            method: "POST",
                            data: viewModel
                        })
                        .done(function () {
                            toastr.success("Rentals successfully submitted!");

                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();

                            viewModel = { movieIds: [] }
                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Failed to submit rentals!");
                        });

                    return false;
                }
            });

            $("#reset").on("click", function () {

                viewModel = { movieIds: [] }
                validator.resetForm();

                toastr.info("Form Reset");

                $("#customer").typeahead("val", "");
                $("#movie").typeahead("val", "");
                $("#movies").empty();


            });
        })

    </script>
}

